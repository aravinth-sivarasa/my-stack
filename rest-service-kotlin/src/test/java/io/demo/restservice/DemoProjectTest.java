// Generated by Selenium IDE
package io.demo.restservice;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.Map;
import java.time.Duration;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;
import org.springframework.boot.test.web.server.LocalServerPort;

import jakarta.annotation.PostConstruct;

@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)
public class DemoProjectTest {
  private WebDriver driver;
  JavascriptExecutor js;

  @LocalServerPort
	private int port;

  String baseURL;

  @PostConstruct
  public void init(){
      baseURL = "http://localhost:"+port;
  }


  @BeforeEach
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
  
  }
  @AfterEach
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void login() {
    driver.get(baseURL+"/vue");
    driver.manage().window().setSize(new Dimension(1920, 1120));
    driver.navigate().refresh();
    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("username")));
    
    driver.findElement(By.name("username")).sendKeys("user");
    driver.findElement(By.name("password")).sendKeys("password");
    driver.findElement(By.name("password")).sendKeys(Keys.ENTER);
    driver.findElement(By.linkText("Invoices")).click();
    driver.findElement(By.linkText("Dashboard")).click();
    driver.findElement(By.cssSelector(".switch")).click();
    driver.findElement(By.cssSelector(".switch")).click();
    driver.findElement(By.cssSelector(".bottom-content a > .text")).click();
    driver.close();
  }
  @Test
  public void loginError() {
    driver.get(baseURL+"/vue/login");
    driver.manage().window().setSize(new Dimension(1920, 1120));
    driver.findElement(By.name("username")).sendKeys("user");
    driver.findElement(By.name("password")).sendKeys("12345667");
    driver.findElement(By.name("password")).sendKeys(Keys.ENTER);
    assertEquals(driver.findElement(By.cssSelector(".Toastify__toast-body > div")).getText(), is("Invalid username or password"));
    driver.findElement(By.name("username")).sendKeys("user");
    driver.findElement(By.name("password")).sendKeys("password");
    driver.findElement(By.name("password")).sendKeys(Keys.ENTER);
    driver.close();
  }
}
