# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3

    - name: Execute Gradle build
      run: ./gradlew build
      working-directory: rest-service-kotlin/

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: print env variable
      run: echo "$GITHUB_CONTEXT"

    - name: list available file
      run: ls rest-service-kotlin
    - name: Push the image
      uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
      with:
        push: true
        tags: rest-service:0.0.1-SNAPSHOT
        file: rest-service-kotlin/Dockerfile
        context: .
        no-cache: true
        build-args: |
          bundle_path=rest-service-kotlin/build/libs/rest-service-0.0.1-SNAPSHOT.jar